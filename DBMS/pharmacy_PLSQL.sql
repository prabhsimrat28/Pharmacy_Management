CREATE TABLE users (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    username VARCHAR2(50) UNIQUE,
    password VARCHAR2(100)
);

CREATE TABLE medicines (
    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100),
    batch_no VARCHAR2(50),
    expiry_date DATE,
    price NUMBER(10, 2),
    quantity NUMBER
);

CREATE TABLE customer (
    customer_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    gender VARCHAR2(10),
    customer_bills NUMBER DEFAULT 0,
    total_order_amount NUMBER(10, 2) DEFAULT 0.00
);

CREATE TABLE bill (
    bill_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    bill_amount NUMBER(10,2),
    bill_date DATE,
    bill_items CLOB,
    customer_id NUMBER,
    CONSTRAINT fk_customer FOREIGN KEY (customer_id) REFERENCES customer(customer_id)
);

INSERT INTO medicines (name, batch_no, expiry_date, price, quantity) VALUES ('Paracetamol 500mg', 'B101', TO_DATE('2026-03-31', 'YYYY-MM-DD'), 15.00, 100);
INSERT INTO medicines (name, batch_no, expiry_date, price, quantity) VALUES ('Amoxicillin 250mg', 'B102', TO_DATE('2025-12-15', 'YYYY-MM-DD'), 32.50, 50);
INSERT INTO medicines (name, batch_no, expiry_date, price, quantity) VALUES ('Ibuprofen 400mg', 'B103', TO_DATE('2027-05-20', 'YYYY-MM-DD'), 21.00, 120);
INSERT INTO medicines (name, batch_no, expiry_date, price, quantity) VALUES ('Ciprofloxacin 500mg', 'B104', TO_DATE('2026-08-10', 'YYYY-MM-DD'), 47.50, 60);
INSERT INTO medicines (name, batch_no, expiry_date, price, quantity) VALUES ('Cetirizine 10mg', 'B105', TO_DATE('2025-09-30', 'YYYY-MM-DD'), 8.50, 200);
INSERT INTO medicines (name, batch_no, expiry_date, price, quantity) VALUES ('Metformin 500mg', 'B106', TO_DATE('2026-11-05', 'YYYY-MM-DD'), 19.00, 90);
INSERT INTO medicines (name, batch_no, expiry_date, price, quantity) VALUES ('Omeprazole 20mg', 'B107', TO_DATE('2027-01-01', 'YYYY-MM-DD'), 23.00, 75);
INSERT INTO medicines (name, batch_no, expiry_date, price, quantity) VALUES ('Amlodipine 5mg', 'B108', TO_DATE('2026-07-15', 'YYYY-MM-DD'), 12.00, 110);
INSERT INTO medicines (name, batch_no, expiry_date, price, quantity) VALUES ('Loratadine 10mg', 'B109', TO_DATE('2025-10-25', 'YYYY-MM-DD'), 9.50, 130);
INSERT INTO medicines (name, batch_no, expiry_date, price, quantity) VALUES ('Azithromycin 500mg', 'B110', TO_DATE('2026-02-18', 'YYYY-MM-DD'), 55.00, 40);

CREATE OR REPLACE PROCEDURE add_medicine (
    p_name        IN VARCHAR2,
    p_batch_no    IN VARCHAR2,
    p_expiry_date IN DATE,
    p_price       IN NUMBER,
    p_quantity    IN NUMBER
)
AS
BEGIN
    INSERT INTO medicines (name, batch_no, expiry_date, price, quantity)
    VALUES (p_name, p_batch_no, p_expiry_date, p_price, p_quantity);
    COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE update_medicine_quantity (
    p_id       IN NUMBER,
    p_quantity IN NUMBER
)
AS
BEGIN
    UPDATE medicines
    SET quantity = p_quantity
    WHERE id = p_id;
    COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE finalize_bill (
    p_bill_amount IN NUMBER,
    p_bill_date   IN DATE,
    p_bill_items  IN VARCHAR2,
    p_customer_id IN NUMBER
)
AS
    v_exists NUMBER;
BEGIN
    SELECT COUNT(*) INTO v_exists
    FROM customer
    WHERE customer_id = p_customer_id;

    IF v_exists = 0 THEN
        INSERT INTO customer (customer_id, gender)
        VALUES (p_customer_id, NULL);
    END IF;

    INSERT INTO bill (bill_amount, bill_date, bill_items, customer_id)
    VALUES (p_bill_amount, p_bill_date, p_bill_items, p_customer_id);

    UPDATE customer
    SET customer_bills = customer_bills + 1,
        total_order_amount = total_order_amount + p_bill_amount
    WHERE customer_id = p_customer_id;

    COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE add_to_bill(
    p_med_id IN NUMBER, 
    p_quantity IN NUMBER, 
    p_total OUT NUMBER, 
    p_message OUT VARCHAR2
) AS
    v_name VARCHAR2(100);
    v_price NUMBER;
    v_stock NUMBER;
    v_total NUMBER;
BEGIN
    SELECT name, price, quantity INTO v_name, v_price, v_stock
    FROM medicines 
    WHERE id = p_med_id;

    IF v_stock >= p_quantity THEN
        v_total := v_price * p_quantity;
        p_total := v_total;
        UPDATE medicines 
        SET quantity = v_stock - p_quantity
        WHERE id = p_med_id;
        COMMIT;
        p_message := 'Medicine added to bill successfully';
    ELSE
        p_message := 'Insufficient stock';
        p_total := 0;
    END IF;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        p_message := 'Medicine not found';
        p_total := 0;
    WHEN OTHERS THEN
        p_message := 'An error occurred';
        p_total := 0;
        ROLLBACK;
END add_to_bill;
/

CREATE OR REPLACE FUNCTION get_total_sales(p_date IN DATE)
RETURN NUMBER
AS
    total_sales NUMBER;
BEGIN
    SELECT NVL(SUM(bill_amount), 0)
    INTO total_sales
    FROM bill
    WHERE TRUNC(bill_date) = TRUNC(p_date);
    return total_sales;
END;
/

DECLARE
    v_total NUMBER := 0;
    v_subtotal NUMBER;
    v_message VARCHAR2(255);
    v_items VARCHAR2(4000) := '';
BEGIN
    add_to_bill(3, 4, v_subtotal, v_message);
    v_total := v_total + v_subtotal;
    v_items := v_items || 'Ibuprofen 400mg x4, ';
    
    add_to_bill(7, 2, v_subtotal, v_message);
    v_total := v_total + v_subtotal;
    v_items := v_items || 'Omeprazole 20mg x2, ';

    v_items := RTRIM(v_items, ', ');
    finalize_bill(v_total, SYSDATE, v_items, 2);
END;
/

DECLARE
    v_total NUMBER := 0;
    v_subtotal NUMBER;
    v_message VARCHAR2(255);
    v_items VARCHAR2(4000) := '';
BEGIN
    add_to_bill(6, 5, v_subtotal, v_message);
    v_total := v_total + v_subtotal;
    v_items := v_items || 'Metformin 500mg x5, ';
    
    add_to_bill(5, 10, v_subtotal, v_message);
    v_total := v_total + v_subtotal;
    v_items := v_items || 'Cetirizine 10mg x10, ';

    v_items := RTRIM(v_items, ', ');
    finalize_bill(v_total, SYSDATE, v_items, 3);
END;
/

DECLARE
    v_total NUMBER := 0;
    v_subtotal NUMBER;
    v_message VARCHAR2(255);
    v_items VARCHAR2(4000) := '';
BEGIN
    add_to_bill(8, 3, v_subtotal, v_message);
    v_total := v_total + v_subtotal;
    v_items := v_items || 'Amlodipine 5mg x3, ';
    
    add_to_bill(10, 1, v_subtotal, v_message);
    v_total := v_total + v_subtotal;
    v_items := v_items || 'Azithromycin 500mg x1, ';

    v_items := RTRIM(v_items, ', ');
    finalize_bill(v_total, SYSDATE, v_items, 4);
END;
/

DECLARE
    v_total_sales NUMBER;
    v_top_customer_id NUMBER;
    v_top_order_value NUMBER;
BEGIN
    /*1. Add a new medicine*/
    add_medicine(
        p_name        => 'Dolo 650mg',
        p_batch_no    => 'B111',
        p_expiry_date => TO_DATE('2026-12-31', 'YYYY-MM-DD'),
        p_price       => 14.00,
        p_quantity    => 250
    );
    DBMS_OUTPUT.PUT_LINE('Medicine added successfully.');

    /*2. Update the quantity of an existing medicine*/
    update_medicine_quantity(p_id => 1, p_quantity => 300);
    DBMS_OUTPUT.PUT_LINE('Medicine quantity updated.');

    /*get total sales on a particular day*/
    v_total_sales := get_total_sales(TO_DATE('2025-05-08', 'YYYY-MM-DD'));
    DBMS_OUTPUT.PUT_LINE('Total sales on 2025-05-08: ' || v_total_sales);

    /*Customer with highest order value using subquery*/
    SELECT customer_id, total_order_amount
    INTO v_top_customer_id, v_top_order_value
    FROM customer
    WHERE total_order_amount = (
        SELECT MAX(total_order_amount) FROM customer
    );

    DBMS_OUTPUT.PUT_LINE('Top customer ID: ' || v_top_customer_id || ', Total Order Amount: ' || v_top_order_value);
END;


select * from customer
select * from bill
select * from medicines where quantity<20
select * from medicines where expiry_date < sysdate+30